2024-05-21 09:12:38,022   INFO  **********************Start logging**********************
2024-05-21 09:12:38,022   INFO  CUDA_VISIBLE_DEVICES=0,1,2,3
2024-05-21 09:12:38,023   INFO  total_batch_size: 1
2024-05-21 09:12:38,023   INFO  total_lr: 0.020000
2024-05-21 09:12:38,023   INFO  cfg_file         tools/cfgs/voxel/nuscenes/EPCL_HD.yaml
2024-05-21 09:12:38,023   INFO  extra_tag        val_EPCL_HD_nuscenes
2024-05-21 09:12:38,023   INFO  set_cfgs         None
2024-05-21 09:12:38,023   INFO  fix_random_seed  True
2024-05-21 09:12:38,023   INFO  exp              5
2024-05-21 09:12:38,023   INFO  crop             False
2024-05-21 09:12:38,023   INFO  batch_size       1
2024-05-21 09:12:38,023   INFO  epochs           48
2024-05-21 09:12:38,023   INFO  sync_bn          False
2024-05-21 09:12:38,023   INFO  ckp              None
2024-05-21 09:12:38,023   INFO  pretrained_model /root/main/EPCL_setup/checkpoints/best_checkpoint.pth
2024-05-21 09:12:38,023   INFO  amp              False
2024-05-21 09:12:38,023   INFO  ckp_save_interval 1
2024-05-21 09:12:38,023   INFO  max_ckp_save_num 30
2024-05-21 09:12:38,023   INFO  merge_all_iters_to_one_epoch False
2024-05-21 09:12:38,023   INFO  lr               0.01
2024-05-21 09:12:38,023   INFO  eval             True
2024-05-21 09:12:38,023   INFO  train_hd         False
2024-05-21 09:12:38,023   INFO  eval_interval    50
2024-05-21 09:12:38,023   INFO  workers          1
2024-05-21 09:12:38,024   INFO  local_rank       0
2024-05-21 09:12:38,024   INFO  launcher         pytorch
2024-05-21 09:12:38,024   INFO  tcp_port         18888
2024-05-21 09:12:38,024   INFO  cfg.ROOT_DIR: /home/EPCL/outdoor_segmentation
2024-05-21 09:12:38,024   INFO  cfg.LOCAL_RANK: 0
2024-05-21 09:12:38,024   INFO  cfg.MODALITY: voxel
2024-05-21 09:12:38,024   INFO  
cfg.DATA = edict()
2024-05-21 09:12:38,024   INFO  cfg.DATA.DATASET: nuscenes
2024-05-21 09:12:38,024   INFO  cfg.DATA.PETRELOSS_CONFIG: None
2024-05-21 09:12:38,024   INFO  cfg.DATA.DATA_PATH: /root/main/dataset-nuscenes/nuscenes-passed/
2024-05-21 09:12:38,024   INFO  cfg.DATA.VOXEL_SIZE: 0.05
2024-05-21 09:12:38,024   INFO  cfg.DATA.AUGMENT: GlobalAugment_LP
2024-05-21 09:12:38,024   INFO  cfg.DATA.NUM_POINTS: 1000000
2024-05-21 09:12:38,024   INFO  cfg.DATA.TRAINVAL: False
2024-05-21 09:12:38,024   INFO  cfg.DATA.TTA: False
2024-05-21 09:12:38,024   INFO  cfg.DATA.SAMPLES_PER_EPOCH: 200
2024-05-21 09:12:38,024   INFO  
cfg.MODEL = edict()
2024-05-21 09:12:38,024   INFO  cfg.MODEL.NAME: EPCLOutdoorSegHD
2024-05-21 09:12:38,024   INFO  cfg.MODEL.IGNORE_LABEL: 0
2024-05-21 09:12:38,024   INFO  cfg.MODEL.IN_FEATURE_DIM: 4
2024-05-21 09:12:38,024   INFO  cfg.MODEL.BLOCK: ResBlock
2024-05-21 09:12:38,024   INFO  cfg.MODEL.NUM_LAYER: [2, 3, 4, 6, 2, 2, 2, 2]
2024-05-21 09:12:38,024   INFO  cfg.MODEL.PLANES: [32, 32, 64, 128, 256, 256, 128, 96, 96]
2024-05-21 09:12:38,024   INFO  cfg.MODEL.cr: 1.6
2024-05-21 09:12:38,025   INFO  cfg.MODEL.DROPOUT_P: 0.0
2024-05-21 09:12:38,025   INFO  cfg.MODEL.LABEL_SMOOTHING: 0.0
2024-05-21 09:12:38,025   INFO  cfg.MODEL.IF_DIST: True
2024-05-21 09:12:38,025   INFO  
cfg.MODEL.EPCL = edict()
2024-05-21 09:12:38,025   INFO  cfg.MODEL.EPCL.ENC_DIM: 768
2024-05-21 09:12:38,025   INFO  cfg.MODEL.EPCL.TOKENIZER_DIM: 409
2024-05-21 09:12:38,025   INFO  cfg.MODEL.EPCL.NUM_GROUP: 512
2024-05-21 09:12:38,025   INFO  cfg.MODEL.EPCL.GROUP_SIZE: 16
2024-05-21 09:12:38,025   INFO  cfg.MODEL.EPCL.VOXEL_SIZE: 0.05
2024-05-21 09:12:38,025   INFO  
cfg.OPTIM = edict()
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.BATCH_SIZE_PER_GPU: 1
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.NUM_EPOCHS: 48
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.OPTIMIZER: sgd
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.LR_PER_SAMPLE: 0.02
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.WEIGHT_DECAY: 0.0001
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.MOMENTUM: 0.9
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.NESTEROV: True
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.GRAD_NORM_CLIP: 10
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.SCHEDULER: linear_warmup_with_cosdecay
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.WARMUP_EPOCH: 1
2024-05-21 09:12:38,025   INFO  cfg.OPTIM.LR: 0.02
2024-05-21 09:12:38,025   INFO  cfg.TAG: EPCL_HD
2024-05-21 09:12:38,025   INFO  cfg.EXP_GROUP_PATH: voxel/nuscenes
2024-05-21 09:12:44,955   INFO  ==> Loading parameters from checkpoint /root/main/EPCL_setup/checkpoints/best_checkpoint.pth to CPU
2024-05-21 09:12:45,662   INFO  ==> Done _IncompatibleKeys(missing_keys=['classifier.0.weight', 'classifier.0.bias'], unexpected_keys=[])
2024-05-21 09:12:45,687   INFO  EPCLOutdoorSegHD(
  (stem): Sequential(
    (0): Conv3d(4, 51, kernel_size=(3, 3, 3), bias=False)
    (1): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv3d(51, 51, kernel_size=(3, 3, 3), bias=False)
    (4): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
  )
  (stage1): Sequential(
    (0): BasicConvolutionBlock(
      (net): Sequential(
        (0): Conv3d(51, 51, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        (1): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(51, 51, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(51, 51, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (2): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(51, 51, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(51, 51, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
  )
  (stage2): Sequential(
    (0): BasicConvolutionBlock(
      (net): Sequential(
        (0): Conv3d(51, 51, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        (1): SyncBatchNorm(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(51, 102, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(102, 102, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Sequential(
        (0): Conv3d(51, 102, kernel_size=(1, 1, 1), bias=False)
        (1): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
    (2): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(102, 102, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(102, 102, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (3): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(102, 102, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(102, 102, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
  )
  (stage3): Sequential(
    (0): BasicConvolutionBlock(
      (net): Sequential(
        (0): Conv3d(102, 102, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        (1): SyncBatchNorm(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(102, 204, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Sequential(
        (0): Conv3d(102, 204, kernel_size=(1, 1, 1), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
    (2): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (3): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (4): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
  )
  (stage4): Sequential(
    (0): BasicConvolutionBlock(
      (net): Sequential(
        (0): Conv3d(204, 204, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(204, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Sequential(
        (0): Conv3d(204, 409, kernel_size=(1, 1, 1), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
    (2): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (3): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (4): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (5): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
    (6): ResidualBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
        (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (relu): ReLU(inplace=True)
    )
  )
  (up1): ModuleList(
    (0): BasicDeconvolutionBlock(
      (net): Sequential(
        (0): Conv3d(409, 409, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False, transposed=True)
        (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(613, 409, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Sequential(
          (0): Conv3d(613, 409, kernel_size=(1, 1, 1), bias=False)
          (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(409, 409, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (relu): ReLU(inplace=True)
      )
    )
  )
  (up2): ModuleList(
    (0): BasicDeconvolutionBlock(
      (net): Sequential(
        (0): Conv3d(409, 204, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False, transposed=True)
        (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(306, 204, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Sequential(
          (0): Conv3d(306, 204, kernel_size=(1, 1, 1), bias=False)
          (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(204, 204, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (relu): ReLU(inplace=True)
      )
    )
  )
  (up3): ModuleList(
    (0): BasicDeconvolutionBlock(
      (net): Sequential(
        (0): Conv3d(204, 153, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False, transposed=True)
        (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(204, 153, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Sequential(
          (0): Conv3d(204, 153, kernel_size=(1, 1, 1), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (relu): ReLU(inplace=True)
      )
    )
  )
  (up4): ModuleList(
    (0): BasicDeconvolutionBlock(
      (net): Sequential(
        (0): Conv3d(153, 153, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False, transposed=True)
        (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(204, 153, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Sequential(
          (0): Conv3d(204, 153, kernel_size=(1, 1, 1), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): ResidualBlock(
        (net): Sequential(
          (0): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (1): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(153, 153, kernel_size=(3, 3, 3), bias=False)
          (4): SyncBatchNorm(153, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (relu): ReLU(inplace=True)
      )
    )
  )
  (classifier): Sequential(
    (0): Linear(in_features=766, out_features=17, bias=True)
  )
  (dropout): Dropout(p=0.0, inplace=True)
  (criterion_losses): Losses(
    (ell_loss): ELLLoss()
    (dice_loss_v0): DiceLossV0()
    (dice_loss_v1): DiceLossV1()
    (wce_loss): WeightedCrossEntropyLoss()
    (ce_loss): CrossEntropyLoss()
    (focalloss): FocalLoss()
    (eqlv2): EQLv2()
    (groupsoftmax): GroupSoftmax()
    (groupsoftmax_fgbg): GroupSoftmax_fgbg_2()
  )
  (epcl_encoder): EPCLEncoder(
    (tokenizer): EPCLPreEncoder(
      (group_divider): SparseGroup()
      (encoder): EmbeddingEncoder(
        (first_conv): Sequential(
          (0): Conv1d(409, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
        )
        (second_conv): Sequential(
          (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv1d(512, 768, kernel_size=(1,), stride=(1,))
        )
      )
    )
    (encoder): ClipTransformer(
      (pos_embed): Sequential(
        (0): Linear(in_features=3, out_features=128, bias=True)
        (1): GELU(approximate='none')
        (2): Linear(in_features=128, out_features=768, bias=True)
      )
      (te_encoder): TaskEmbEncoder(
        (embedding): Embedding(20, 768)
        (trans): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): GELU(approximate='none')
          (2): Linear(in_features=768, out_features=768, bias=True)
        )
      )
      (blocks): Transformer(
        (resblocks): Sequential(
          (0): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
    (upsamping): PointNetFeaturePropagation(
      (mlp_convs): ModuleList(
        (0): Conv1d(768, 409, kernel_size=(1,), stride=(1,))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm1d(409, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2024-05-21 09:12:45,692   INFO  Model parameters: 183.954 M
2024-05-21 09:12:45,826   INFO  *************** TRAINED EPOCH 0 val EVALUATION *****************
2024-05-21 09:15:35,328   INFO  Validation per class iou: 
2024-05-21 09:15:35,330   INFO  +--------------------------------+
|         Validation iou         |
+----------------------+---------+
| Classes              | IoU     |
+----------------------+---------+
| All                  | 15.9765 |
| barrier              | 15.2675 |
| bicycle              | 0.0     |
| bus                  | 2.1512  |
| car                  | 20.668  |
| construction vehicle | 1.3612  |
| motorcycle           | 1.2083  |
| pedestrian           | 5.8099  |
| trafic cone          | 3.9882  |
| trailer              | 0.0     |
| truck                | 6.9475  |
| driveble surface     | 67.5618 |
| other_flat           | 0.6614  |
| sidewalk             | 9.8025  |
| terrain              | 29.8867 |
| manmade              | 44.0031 |
| vegetation           | 46.3061 |
+----------------------+---------+
2024-05-21 09:15:35,334   INFO  +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                                                           Confusion matrix                                                                                                          |
+----------------------+---------+---------+--------+---------+----------------------+------------+------------+-------------+---------+--------+------------------+------------+----------+---------+---------+------------+---------+
| Classes              | barrier | bicycle | bus    | car     | construction vehicle | motorcycle | pedestrian | trafic cone | trailer | truck  | driveble surface | other_flat | sidewalk | terrain | manmade | vegetation | Points  |
+----------------------+---------+---------+--------+---------+----------------------+------------+------------+-------------+---------+--------+------------------+------------+----------+---------+---------+------------+---------+
| barrier              | 39.6263 | 0.0     | 0.2074 | 9.6732  | 0.3121               | 1.2592     | 1.6146     | 0.0518      | 0.0031  | 0.4415 | 2.7846           | 0.0792     | 6.1157   | 6.1794  | 23.0881 | 8.5638     | 258891  |
| bicycle              | 10.3361 | 0.0     | 0.2702 | 13.849  | 1.1653               | 9.9476     | 7.8365     | 0.4729      | 0.0169  | 2.8711 | 1.0978           | 0.0338     | 1.6551   | 2.3982  | 22.4793 | 25.57      | 5921    |
| bus                  | 2.1038  | 0.0     | 3.0175 | 31.5522 | 1.4433               | 5.7381     | 0.8619     | 0.0083      | 0.0     | 3.0321 | 1.3167           | 0.0249     | 1.5202   | 1.379   | 35.6247 | 12.3775    | 48152   |
| car                  | 5.8544  | 0.0033  | 0.1491 | 49.2875 | 0.7552               | 4.0826     | 2.6405     | 0.0407      | 0.0071  | 2.0652 | 8.2145           | 0.7857     | 1.903    | 2.5419  | 12.9126 | 8.7565     | 449390  |
| construction vehicle | 2.5335  | 0.0     | 1.2696 | 15.3073 | 5.3486               | 7.2197     | 1.5475     | 0.0286      | 0.0038  | 1.8254 | 1.557            | 0.0495     | 2.798    | 2.4821  | 30.0759 | 27.9536    | 52537   |
| motorcycle           | 8.8903  | 0.0     | 0.102  | 41.6645 | 1.4796               | 16.9962    | 2.8635     | 0.0446      | 0.0064  | 5.2997 | 1.3712           | 0.1276     | 1.4923   | 0.6059  | 8.2717  | 10.7844    | 15680   |
| pedestrian           | 3.0925  | 0.0     | 0.2679 | 16.7541 | 0.973                | 3.2307     | 18.1868    | 0.3963      | 0.0028  | 0.7953 | 0.7488           | 0.0663     | 1.5469   | 1.3185  | 32.4111 | 20.209     | 70914   |
| trafic cone          | 6.6806  | 0.0051  | 0.2404 | 13.4431 | 0.5678               | 1.243      | 13.346     | 4.7573      | 0.0     | 1.3811 | 1.1765           | 0.0972     | 5.3609   | 3.3454  | 24.1751 | 24.1803    | 19549   |
| trailer              | 4.4766  | 0.0     | 0.1265 | 8.8239  | 0.138                | 3.5626     | 1.1511     | 0.0431      | 0.0     | 1.3408 | 1.9387           | 0.0187     | 1.2287   | 2.4359  | 64.5637 | 10.1518    | 69584   |
| truck                | 3.2521  | 0.0     | 0.2934 | 27.4642 | 1.9977               | 13.6309    | 1.2559     | 0.0272      | 0.0034  | 8.2893 | 1.8864           | 0.0584     | 2.2254   | 1.6187  | 25.9032 | 12.0937    | 407610  |
| driveble surface     | 0.1946  | 0.0     | 0.0022 | 0.9776  | 0.0393               | 0.0075     | 0.1001     | 0.0025      | 0.0002  | 0.1003 | 84.9258          | 0.1797     | 4.9068   | 5.5386  | 2.2603  | 0.7646     | 7964626 |
| other_flat           | 2.0309  | 0.0     | 0.0142 | 2.801   | 0.1299               | 0.1024     | 0.5182     | 0.0102      | 0.0024  | 0.2866 | 49.0011          | 0.9032     | 7.4377   | 24.8596 | 7.3565  | 4.5461     | 126989  |
| sidewalk             | 1.0011  | 0.0     | 0.0104 | 1.7286  | 0.1027               | 0.0393     | 0.2942     | 0.0133      | 0.0003  | 0.1892 | 55.383           | 0.2824     | 14.6036  | 18.4883 | 5.4997  | 2.3638     | 1622741 |
| terrain              | 2.6762  | 0.0002  | 0.0095 | 1.3215  | 0.1928               | 0.0712     | 0.6116     | 0.0103      | 0.0005  | 0.3268 | 29.8228          | 0.4606     | 7.2711   | 39.9812 | 8.8336  | 8.4101     | 3069465 |
| manmade              | 2.8582  | 0.0002  | 0.3042 | 4.9955  | 0.4441               | 0.6773     | 1.3893     | 0.0385      | 0.0006  | 0.3905 | 2.1189           | 0.0448     | 1.9881   | 2.7005  | 58.9045 | 23.1448    | 4054524 |
| vegetation           | 3.7893  | 0.0003  | 0.0867 | 2.3721  | 3.2248               | 2.4613     | 1.0436     | 0.0195      | 0.0006  | 0.7518 | 0.8461           | 0.2171     | 1.5064   | 3.3485  | 14.3132 | 66.019     | 3435148 |
+----------------------+---------+---------+--------+---------+----------------------+------------+------------+-------------+---------+--------+------------------+------------+----------+---------+---------+------------+---------+
